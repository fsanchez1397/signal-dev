// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
    shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}
enum ChallengeCategory {
  ARRAYS_HASHING
  GRAPHS
  DEPTH_FIRST_SEARCH
  DYNAMIC_PROGRAMMING
}

enum InterviewStatus {
  SCHEDULED
  COMPLETED
  REVIEWED
  ARCHIVED
}

// 3. Data Models
// These are the blueprints for your database tables.

model CandidateProfile {
  id        String    @id @default(cuid())
  // The link to the Supabase auth.users table. @unique enforces one profile per user.
  userId    String    @unique
  fullName  String?
  githubUrl String?
  bio       String?   @db.Text
  visaNeeded Boolean  @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // This defines the one-to-many relationship: One candidate can have many interviews.
  interviews Interview[]
}

model Interview {
  id           String   @id @default(cuid())
  score        Int?
  recordingUrl String?
  status       InterviewStatus @default(COMPLETED)
  category     ChallengeCategory

  createdAt    DateTime @default(now())

  // This defines the other side of the relationship.
  // The candidateId field in this table points to the id field in the CandidateProfile table.
  candidate   CandidateProfile @relation(fields: [candidateId], references: [id])
  candidateId String
}