generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
model CandidateProfile {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId    String    @unique @db.Uuid
  email     String    @unique
  firstName String    
  lastName  String    
  githubUrl String?
  bio       String?    @db.Text
  visaNeeded Boolean?  @default(false)
  createdAt DateTime
  updatedAt DateTime  @updatedAt

  // A candidate can have multiple interviews over time.
  interviews Interview[]
}

model Interview {
  id           String            @id
  score        Int?
  recordingUrl String?
  status       InterviewStatus   @default(COMPLETED)
  category     ChallengeCategory
  createdAt    DateTime          @default(now())
  candidateId  String            @db.Uuid
  candidate    CandidateProfile  @relation(fields: [candidateId], references: [id])
}

enum ChallengeCategory {
  ARRAYS_HASHING
  GRAPHS
  DEPTH_FIRST_SEARCH
  DYNAMIC_PROGRAMMING
}

enum InterviewStatus {
  SCHEDULED
  COMPLETED
  REVIEWED
  ARCHIVED
}
